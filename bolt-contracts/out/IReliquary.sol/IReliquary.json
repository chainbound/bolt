{"abi":[{"type":"function","name":"ADD_PROVER_ROLE","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"CREDITS_ROLE","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"DELAY","inputs":[],"outputs":[{"name":"","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"GOVERNANCE_ROLE","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"SUBSCRIPTION_ROLE","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"activateProver","inputs":[{"name":"prover","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"addCredits","inputs":[{"name":"user","type":"address","internalType":"address"},{"name":"amount","type":"uint192","internalType":"uint192"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"addProver","inputs":[{"name":"prover","type":"address","internalType":"address"},{"name":"version","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"addSubscriber","inputs":[{"name":"user","type":"address","internalType":"address"},{"name":"ts","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"assertValidBlockHash","inputs":[{"name":"verifier","type":"address","internalType":"address"},{"name":"hash","type":"bytes32","internalType":"bytes32"},{"name":"num","type":"uint256","internalType":"uint256"},{"name":"proof","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"assertValidBlockHashFromProver","inputs":[{"name":"verifier","type":"address","internalType":"address"},{"name":"hash","type":"bytes32","internalType":"bytes32"},{"name":"num","type":"uint256","internalType":"uint256"},{"name":"proof","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"view"},{"type":"function","name":"checkProveFactFee","inputs":[{"name":"sender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"checkProver","inputs":[{"name":"prover","type":"tuple","internalType":"struct IReliquary.ProverInfo","components":[{"name":"version","type":"uint64","internalType":"uint64"},{"name":"feeInfo","type":"tuple","internalType":"struct IReliquary.FeeInfo","components":[{"name":"flags","type":"uint8","internalType":"uint8"},{"name":"feeCredits","type":"uint16","internalType":"uint16"},{"name":"feeWeiMantissa","type":"uint8","internalType":"uint8"},{"name":"feeWeiExponent","type":"uint8","internalType":"uint8"},{"name":"feeExternalId","type":"uint32","internalType":"uint32"}]},{"name":"revoked","type":"bool","internalType":"bool"}]}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"credits","inputs":[{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint192","internalType":"uint192"}],"stateMutability":"view"},{"type":"function","name":"debugValidBlockHash","inputs":[{"name":"verifier","type":"address","internalType":"address"},{"name":"hash","type":"bytes32","internalType":"bytes32"},{"name":"num","type":"uint256","internalType":"uint256"},{"name":"proof","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"debugVerifyFact","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"factSig","type":"bytes32","internalType":"FactSignature"}],"outputs":[{"name":"exists","type":"bool","internalType":"bool"},{"name":"version","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"factFees","inputs":[{"name":"","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IReliquary.FeeInfo","components":[{"name":"flags","type":"uint8","internalType":"uint8"},{"name":"feeCredits","type":"uint16","internalType":"uint16"},{"name":"feeWeiMantissa","type":"uint8","internalType":"uint8"},{"name":"feeWeiExponent","type":"uint8","internalType":"uint8"},{"name":"feeExternalId","type":"uint32","internalType":"uint32"}]}],"stateMutability":"view"},{"type":"function","name":"feeAccounts","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"subscriberUntilTime","type":"uint64","internalType":"uint64"},{"name":"credits","type":"uint192","internalType":"uint192"}],"stateMutability":"view"},{"type":"function","name":"feeExternals","inputs":[{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getFact","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"factSig","type":"bytes32","internalType":"FactSignature"}],"outputs":[{"name":"exists","type":"bool","internalType":"bool"},{"name":"version","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getProveFactNativeFee","inputs":[{"name":"prover","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getProveFactTokenFee","inputs":[{"name":"prover","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getRoleAdmin","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"getVerifyFactNativeFee","inputs":[{"name":"factSig","type":"bytes32","internalType":"FactSignature"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getVerifyFactTokenFee","inputs":[{"name":"factSig","type":"bytes32","internalType":"FactSignature"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"grantRole","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"hasRole","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"initialized","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isSubscriber","inputs":[{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"pendingProvers","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"timestamp","type":"uint64","internalType":"uint64"},{"name":"version","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"provers","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IReliquary.ProverInfo","components":[{"name":"version","type":"uint64","internalType":"uint64"},{"name":"feeInfo","type":"tuple","internalType":"struct IReliquary.FeeInfo","components":[{"name":"flags","type":"uint8","internalType":"uint8"},{"name":"feeCredits","type":"uint16","internalType":"uint16"},{"name":"feeWeiMantissa","type":"uint8","internalType":"uint8"},{"name":"feeWeiExponent","type":"uint8","internalType":"uint8"},{"name":"feeExternalId","type":"uint32","internalType":"uint32"}]},{"name":"revoked","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"removeCredits","inputs":[{"name":"user","type":"address","internalType":"address"},{"name":"amount","type":"uint192","internalType":"uint192"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeSubscriber","inputs":[{"name":"user","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"renounceRole","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"callerConfirmation","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resetFact","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"factSig","type":"bytes32","internalType":"FactSignature"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revokeProver","inputs":[{"name":"prover","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revokeRole","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setCredits","inputs":[{"name":"user","type":"address","internalType":"address"},{"name":"amount","type":"uint192","internalType":"uint192"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setFact","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"factSig","type":"bytes32","internalType":"FactSignature"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setFactFee","inputs":[{"name":"cls","type":"uint8","internalType":"uint8"},{"name":"feeInfo","type":"tuple","internalType":"struct IReliquary.FeeInfo","components":[{"name":"flags","type":"uint8","internalType":"uint8"},{"name":"feeCredits","type":"uint16","internalType":"uint16"},{"name":"feeWeiMantissa","type":"uint8","internalType":"uint8"},{"name":"feeWeiExponent","type":"uint8","internalType":"uint8"},{"name":"feeExternalId","type":"uint32","internalType":"uint32"}]},{"name":"feeExternal","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setInitialized","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setProverFee","inputs":[{"name":"prover","type":"address","internalType":"address"},{"name":"feeInfo","type":"tuple","internalType":"struct IReliquary.FeeInfo","components":[{"name":"flags","type":"uint8","internalType":"uint8"},{"name":"feeCredits","type":"uint16","internalType":"uint16"},{"name":"feeWeiMantissa","type":"uint8","internalType":"uint8"},{"name":"feeWeiExponent","type":"uint8","internalType":"uint8"},{"name":"feeExternalId","type":"uint32","internalType":"uint32"}]},{"name":"feeExternal","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setValidBlockFee","inputs":[{"name":"feeInfo","type":"tuple","internalType":"struct IReliquary.FeeInfo","components":[{"name":"flags","type":"uint8","internalType":"uint8"},{"name":"feeCredits","type":"uint16","internalType":"uint16"},{"name":"feeWeiMantissa","type":"uint8","internalType":"uint8"},{"name":"feeWeiExponent","type":"uint8","internalType":"uint8"},{"name":"feeExternalId","type":"uint32","internalType":"uint32"}]},{"name":"feeExternal","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"validBlockHash","inputs":[{"name":"verifier","type":"address","internalType":"address"},{"name":"hash","type":"bytes32","internalType":"bytes32"},{"name":"num","type":"uint256","internalType":"uint256"},{"name":"proof","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"payable"},{"type":"function","name":"validBlockHashFromProver","inputs":[{"name":"verifier","type":"address","internalType":"address"},{"name":"hash","type":"bytes32","internalType":"bytes32"},{"name":"num","type":"uint256","internalType":"uint256"},{"name":"proof","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"verifyBlockFeeInfo","inputs":[],"outputs":[{"name":"","type":"tuple","internalType":"struct IReliquary.FeeInfo","components":[{"name":"flags","type":"uint8","internalType":"uint8"},{"name":"feeCredits","type":"uint16","internalType":"uint16"},{"name":"feeWeiMantissa","type":"uint8","internalType":"uint8"},{"name":"feeWeiExponent","type":"uint8","internalType":"uint8"},{"name":"feeExternalId","type":"uint32","internalType":"uint32"}]}],"stateMutability":"view"},{"type":"function","name":"verifyFact","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"factSig","type":"bytes32","internalType":"FactSignature"}],"outputs":[{"name":"exists","type":"bool","internalType":"bool"},{"name":"version","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"payable"},{"type":"function","name":"verifyFactNoFee","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"factSig","type":"bytes32","internalType":"FactSignature"}],"outputs":[{"name":"exists","type":"bool","internalType":"bool"},{"name":"version","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"verifyFactVersion","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"factSig","type":"bytes32","internalType":"FactSignature"}],"outputs":[{"name":"exists","type":"bool","internalType":"bool"},{"name":"version","type":"uint64","internalType":"uint64"}],"stateMutability":"payable"},{"type":"function","name":"verifyFactVersionNoFee","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"factSig","type":"bytes32","internalType":"FactSignature"}],"outputs":[{"name":"exists","type":"bool","internalType":"bool"},{"name":"version","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"versions","inputs":[{"name":"","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"withdrawFees","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"dest","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"NewProver","inputs":[{"name":"prover","type":"address","indexed":false,"internalType":"address"},{"name":"version","type":"uint64","indexed":false,"internalType":"uint64"}],"anonymous":false},{"type":"event","name":"PendingProverAdded","inputs":[{"name":"prover","type":"address","indexed":false,"internalType":"address"},{"name":"version","type":"uint64","indexed":false,"internalType":"uint64"},{"name":"timestamp","type":"uint64","indexed":false,"internalType":"uint64"}],"anonymous":false},{"type":"event","name":"ProverRevoked","inputs":[{"name":"prover","type":"address","indexed":false,"internalType":"address"},{"name":"version","type":"uint64","indexed":false,"internalType":"uint64"}],"anonymous":false},{"type":"event","name":"RoleAdminChanged","inputs":[{"name":"role","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"previousAdminRole","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"newAdminRole","type":"bytes32","indexed":true,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"RoleGranted","inputs":[{"name":"role","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"account","type":"address","indexed":true,"internalType":"address"},{"name":"sender","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"RoleRevoked","inputs":[{"name":"role","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"account","type":"address","indexed":true,"internalType":"address"},{"name":"sender","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"error","name":"AccessControlBadConfirmation","inputs":[]},{"type":"error","name":"AccessControlUnauthorizedAccount","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"neededRole","type":"bytes32","internalType":"bytes32"}]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"ADD_PROVER_ROLE()":"4eecf441","CREDITS_ROLE()":"241c10a3","DELAY()":"69b41170","GOVERNANCE_ROLE()":"f36c8f5c","SUBSCRIPTION_ROLE()":"37620295","activateProver(address)":"69fa06d0","addCredits(address,uint192)":"6219880e","addProver(address,uint64)":"b9a52efe","addSubscriber(address,uint64)":"84d688b6","assertValidBlockHash(address,bytes32,uint256,bytes)":"dd898a7f","assertValidBlockHashFromProver(address,bytes32,uint256,bytes)":"49fae659","checkProveFactFee(address)":"72fc6d62","checkProver((uint64,(uint8,uint16,uint8,uint8,uint32),bool))":"e7157b74","credits(address)":"fe5ff468","debugValidBlockHash(address,bytes32,uint256,bytes)":"0ee1d786","debugVerifyFact(address,bytes32)":"ee90a854","factFees(uint8)":"e65db16d","feeAccounts(address)":"e2e71f93","feeExternals(uint256)":"0abd834e","getFact(address,bytes32)":"c59a9703","getProveFactNativeFee(address)":"4a1ec016","getProveFactTokenFee(address)":"162bd10a","getRoleAdmin(bytes32)":"248a9ca3","getVerifyFactNativeFee(bytes32)":"10da418c","getVerifyFactTokenFee(bytes32)":"1accba8f","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","initialized()":"158ef93e","isSubscriber(address)":"c4804ef0","pendingProvers(address)":"ef49664d","provers(address)":"1dec844b","removeCredits(address,uint192)":"cd7cbe5c","removeSubscriber(address)":"627c34ad","renounceRole(bytes32,address)":"36568abe","resetFact(address,bytes32)":"0e71d8a2","revokeProver(address)":"bd629d26","revokeRole(bytes32,address)":"d547741f","setCredits(address,uint192)":"c3e9ffbd","setFact(address,bytes32,bytes)":"a432d4ca","setFactFee(uint8,(uint8,uint16,uint8,uint8,uint32),address)":"4f1e73ea","setInitialized()":"80192821","setProverFee(address,(uint8,uint16,uint8,uint8,uint32),address)":"1f0a2b6e","setValidBlockFee((uint8,uint16,uint8,uint8,uint32),address)":"d80992e7","validBlockHash(address,bytes32,uint256,bytes)":"50ee31e7","validBlockHashFromProver(address,bytes32,uint256,bytes)":"4ed8611f","verifyBlockFeeInfo()":"ddb0ed96","verifyFact(address,bytes32)":"18b33775","verifyFactNoFee(address,bytes32)":"7c9acc23","verifyFactVersion(address,bytes32)":"e4a4fa5f","verifyFactVersionNoFee(address,bytes32)":"9e3c54ae","versions(uint64)":"f2d76d0d","withdrawFees(address,address)":"f2555278"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"prover\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"NewProver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"prover\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"PendingProverAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"prover\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"ProverRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADD_PROVER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CREDITS_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DELAY\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GOVERNANCE_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SUBSCRIPTION_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"prover\",\"type\":\"address\"}],\"name\":\"activateProver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"amount\",\"type\":\"uint192\"}],\"name\":\"addCredits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"prover\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"addProver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"ts\",\"type\":\"uint64\"}],\"name\":\"addSubscriber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"assertValidBlockHash\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"assertValidBlockHashFromProver\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"checkProveFactFee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"flags\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"feeCredits\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeWeiMantissa\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeWeiExponent\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"feeExternalId\",\"type\":\"uint32\"}],\"internalType\":\"struct IReliquary.FeeInfo\",\"name\":\"feeInfo\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"}],\"internalType\":\"struct IReliquary.ProverInfo\",\"name\":\"prover\",\"type\":\"tuple\"}],\"name\":\"checkProver\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"credits\",\"outputs\":[{\"internalType\":\"uint192\",\"name\":\"\",\"type\":\"uint192\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"debugValidBlockHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"FactSignature\",\"name\":\"factSig\",\"type\":\"bytes32\"}],\"name\":\"debugVerifyFact\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"factFees\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"flags\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"feeCredits\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeWeiMantissa\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeWeiExponent\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"feeExternalId\",\"type\":\"uint32\"}],\"internalType\":\"struct IReliquary.FeeInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"feeAccounts\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"subscriberUntilTime\",\"type\":\"uint64\"},{\"internalType\":\"uint192\",\"name\":\"credits\",\"type\":\"uint192\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"feeExternals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"FactSignature\",\"name\":\"factSig\",\"type\":\"bytes32\"}],\"name\":\"getFact\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"prover\",\"type\":\"address\"}],\"name\":\"getProveFactNativeFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"prover\",\"type\":\"address\"}],\"name\":\"getProveFactTokenFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"FactSignature\",\"name\":\"factSig\",\"type\":\"bytes32\"}],\"name\":\"getVerifyFactNativeFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"FactSignature\",\"name\":\"factSig\",\"type\":\"bytes32\"}],\"name\":\"getVerifyFactTokenFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isSubscriber\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pendingProvers\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"provers\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"flags\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"feeCredits\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeWeiMantissa\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeWeiExponent\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"feeExternalId\",\"type\":\"uint32\"}],\"internalType\":\"struct IReliquary.FeeInfo\",\"name\":\"feeInfo\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"}],\"internalType\":\"struct IReliquary.ProverInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"amount\",\"type\":\"uint192\"}],\"name\":\"removeCredits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"removeSubscriber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"FactSignature\",\"name\":\"factSig\",\"type\":\"bytes32\"}],\"name\":\"resetFact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"prover\",\"type\":\"address\"}],\"name\":\"revokeProver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"amount\",\"type\":\"uint192\"}],\"name\":\"setCredits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"FactSignature\",\"name\":\"factSig\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"setFact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"cls\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"flags\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"feeCredits\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeWeiMantissa\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeWeiExponent\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"feeExternalId\",\"type\":\"uint32\"}],\"internalType\":\"struct IReliquary.FeeInfo\",\"name\":\"feeInfo\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"feeExternal\",\"type\":\"address\"}],\"name\":\"setFactFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setInitialized\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"prover\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"flags\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"feeCredits\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeWeiMantissa\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeWeiExponent\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"feeExternalId\",\"type\":\"uint32\"}],\"internalType\":\"struct IReliquary.FeeInfo\",\"name\":\"feeInfo\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"feeExternal\",\"type\":\"address\"}],\"name\":\"setProverFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"flags\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"feeCredits\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeWeiMantissa\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeWeiExponent\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"feeExternalId\",\"type\":\"uint32\"}],\"internalType\":\"struct IReliquary.FeeInfo\",\"name\":\"feeInfo\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"feeExternal\",\"type\":\"address\"}],\"name\":\"setValidBlockFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"validBlockHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"validBlockHashFromProver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifyBlockFeeInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"flags\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"feeCredits\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeWeiMantissa\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeWeiExponent\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"feeExternalId\",\"type\":\"uint32\"}],\"internalType\":\"struct IReliquary.FeeInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"FactSignature\",\"name\":\"factSig\",\"type\":\"bytes32\"}],\"name\":\"verifyFact\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"FactSignature\",\"name\":\"factSig\",\"type\":\"bytes32\"}],\"name\":\"verifyFactNoFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"FactSignature\",\"name\":\"factSig\",\"type\":\"bytes32\"}],\"name\":\"verifyFactVersion\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"FactSignature\",\"name\":\"factSig\",\"type\":\"bytes32\"}],\"name\":\"verifyFactVersionNoFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"versions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dest\",\"type\":\"address\"}],\"name\":\"withdrawFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Theori, Inc.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"NewProver(address,uint64)\":{\"params\":{\"prover\":\"the address of the prover contract\",\"version\":\"the identifier that will always be associated with the prover\"}},\"PendingProverAdded(address,uint64,uint64)\":{\"params\":{\"prover\":\"the address of the prover contract\",\"timestamp\":\"the earliest this prover can be brought into the Reliquary\",\"version\":\"the proposed identifier to always be associated with the prover\"}},\"ProverRevoked(address,uint64)\":{\"details\":\"revoked provers may not issue new Relics or Artifacts. The meaning of      any previously introduced Relics or Artifacts is implementation dependent.\",\"params\":{\"prover\":\"the address of the prover contract\",\"version\":\"the identifier that can never be used again\"}},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"activateProver(address)\":{\"params\":{\"prover\":\"the address of the pending prover\"}},\"addCredits(address,uint192)\":{\"params\":{\"amount\":\"The number of credits to be added\",\"user\":\"The account to which more credits should be granted\"}},\"addProver(address,uint64)\":{\"details\":\"Provers and proposed provers must have unique version IDsAfter the Reliquary is initialized, a review period of 64k blocks      must conclude before a prover may be added. The request must then      be re-submitted to take effect. Before initialization is complete,      the review period is skipped.Emits PendingProverAdded when a prover is proposed for inclusion\",\"params\":{\"prover\":\"the address of the prover in question\",\"version\":\"the unique version string to associate with this prover\"}},\"addSubscriber(address,uint64)\":{\"params\":{\"ts\":\"The new block timestamp at which the subscription expires\",\"user\":\"The subscriber account to modify\"}},\"assertValidBlockHash(address,bytes32,uint256,bytes)\":{\"details\":\"Reverts if the given block was not proven to have the given hash.A fee may be required based on the block in question\",\"params\":{\"hash\":\"The block hash in question\",\"num\":\"The block number to query\",\"proof\":\"Any witness information needed by the verifier\",\"verifier\":\"The block history verifier to use for the query\"}},\"assertValidBlockHashFromProver(address,bytes32,uint256,bytes)\":{\"details\":\"Reverts if the given block was not proven to have the given hash.This function is only for use by provers (reverts otherwise)\",\"params\":{\"hash\":\"The block hash in question\",\"num\":\"The block number to query\",\"proof\":\"Any witness information needed by the verifier\",\"verifier\":\"The block history verifier to use for the query\"}},\"checkProveFactFee(address)\":{\"details\":\"The fee is derived from the prover which calls this  functionReverts if the fee is not sufficientOnly to be called by a prover\",\"params\":{\"sender\":\"The account wanting to prove a fact\"}},\"checkProver((uint64,(uint8,uint16,uint8,uint8,uint32),bool))\":{\"details\":\"reverts if the prover is invalid or revoked\",\"params\":{\"prover\":\"the ProverInfo associated with the prover in question\"}},\"credits(address)\":{\"params\":{\"user\":\"The account in question\"},\"returns\":{\"_0\":\"The number of credits\"}},\"debugValidBlockHash(address,bytes32,uint256,bytes)\":{\"details\":\"This function is for use by off-chain tools only (reverts otherwise)\",\"params\":{\"hash\":\"The block hash in question\",\"num\":\"The block number to query\",\"proof\":\"Any witness information needed by the verifier\",\"verifier\":\"The block history verifier to use for the query\"},\"returns\":{\"_0\":\"boolean indication of whether or not the given block was         proven to have the given hash.\"}},\"debugVerifyFact(address,bytes32)\":{\"details\":\"This function is for use by off-chain tools only (reverts otherwise)\",\"params\":{\"account\":\"The address to which the fact belongs\",\"factSig\":\"The unique signature identifying the fact\"},\"returns\":{\"data\":\"any associated fact data\",\"exists\":\"whether or not a fact with the given signature         is associated with the queried account\",\"version\":\"the prover version id that proved this fact\"}},\"getFact(address,bytes32)\":{\"details\":\"This function is only for use by provers (reverts otherwise)\",\"params\":{\"account\":\"The address to which the fact belongs\",\"factSig\":\"The unique signature identifying the fact\"},\"returns\":{\"data\":\"any associated fact data\",\"exists\":\"whether or not a fact with the given signature         is associated with the queried account\",\"version\":\"the prover version id that proved this fact\"}},\"getProveFactNativeFee(address)\":{\"details\":\"Reverts if the fee is not to be paid in ETH\",\"params\":{\"prover\":\"The prover of the desired fact\"},\"returns\":{\"_0\":\"the fee in wei\"}},\"getProveFactTokenFee(address)\":{\"details\":\"Reverts if the fee is not to be paid in external tokens\",\"params\":{\"prover\":\"The prover of the desired fact\"},\"returns\":{\"_0\":\"the fee in wei\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getVerifyFactNativeFee(bytes32)\":{\"details\":\"Reverts if the fee is not to be paid in ETH\",\"params\":{\"factSig\":\"The signature of the desired fact\"},\"returns\":{\"_0\":\"the fee in wei\"}},\"getVerifyFactTokenFee(bytes32)\":{\"details\":\"Reverts if the fee is not to be paid in external tokens\",\"params\":{\"factSig\":\"The signature of the desired fact\"},\"returns\":{\"_0\":\"the fee in wei\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isSubscriber(address)\":{\"params\":{\"user\":\"The account in question\"},\"returns\":{\"_0\":\"True if the account is active, otherwise false\"}},\"removeCredits(address,uint192)\":{\"params\":{\"amount\":\"The number of credits to be removed\",\"user\":\"The account from which credits should be removed\"}},\"removeSubscriber(address)\":{\"params\":{\"user\":\"The subscriber account to modify\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"resetFact(address,bytes32)\":{\"details\":\"May only be called by non-revoked provers\",\"params\":{\"account\":\"The account to which this information is bound (may be        the null account for information bound to no specific address)\",\"factSig\":\"The unique signature of the particular fact being deleted\"}},\"revokeProver(address)\":{\"details\":\"Emits ProverRevokedNote: existing facts proved by the prover may still stand\",\"params\":{\"prover\":\"The prover to banish from the reliquary\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"setFact(address,bytes32,bytes)\":{\"details\":\"May only be called by non-revoked provers\",\"params\":{\"account\":\"The account to which this information is bound (may be        the null account for information bound to no specific address)\",\"data\":\"Associated data to store with this item\",\"factSig\":\"The unique signature of the particular fact being proven\"}},\"setFactFee(uint8,(uint8,uint16,uint8,uint8,uint32),address)\":{\"params\":{\"cls\":\"The fee class\",\"feeExternal\":\"An external fee provider (token or delegate). If        none is required, this should be set to 0.\",\"feeInfo\":\"The FeeInfo to use for the class\"}},\"setProverFee(address,(uint8,uint16,uint8,uint8,uint32),address)\":{\"params\":{\"feeExternal\":\"An external fee provider (token or delegate). If        none is required, this should be set to 0.\",\"feeInfo\":\"The FeeInfo to use for the class\",\"prover\":\"The prover in question\"}},\"setValidBlockFee((uint8,uint16,uint8,uint8,uint32),address)\":{\"params\":{\"feeExternal\":\"An external fee provider (token or delegate). If        none is required, this should be set to 0.\",\"feeInfo\":\"The FeeInfo to use for the class\"}},\"validBlockHash(address,bytes32,uint256,bytes)\":{\"details\":\"A fee may be required based on the block in question\",\"params\":{\"hash\":\"The block hash in question\",\"num\":\"The block number to query\",\"proof\":\"Any witness information needed by the verifier\",\"verifier\":\"The block history verifier to use for the query\"},\"returns\":{\"_0\":\"boolean indication of whether or not the given block was         proven to have the given hash.\"}},\"validBlockHashFromProver(address,bytes32,uint256,bytes)\":{\"details\":\"This function is only for use by provers (reverts otherwise)\",\"params\":{\"hash\":\"The block hash in question\",\"num\":\"The block number to query\",\"proof\":\"Any witness information needed by the verifier\",\"verifier\":\"The block history verifier to use for the query\"},\"returns\":{\"_0\":\"boolean indication of whether or not the given block was         proven to have the given hash.\"}},\"verifyFact(address,bytes32)\":{\"details\":\"A fee may be required based on the factSig\",\"params\":{\"account\":\"The address to which the fact belongs\",\"factSig\":\"The unique signature identifying the fact\"},\"returns\":{\"data\":\"any associated fact data\",\"exists\":\"whether or not a fact with the given signature         is associated with the queried account\",\"version\":\"the prover version id that proved this fact\"}},\"verifyFactNoFee(address,bytes32)\":{\"details\":\"This function is for use by anyoneThis function reverts if the fact requires a fee to query\",\"params\":{\"account\":\"The address to which the fact belongs\",\"factSig\":\"The unique signature identifying the fact\"},\"returns\":{\"data\":\"any associated fact data\",\"exists\":\"whether or not a fact with the given signature         is associated with the queried account\",\"version\":\"the prover version id that proved this fact\"}},\"verifyFactVersion(address,bytes32)\":{\"details\":\"A fee may be required based on the factSig\",\"params\":{\"account\":\"The address to which the fact belongs\",\"factSig\":\"The unique signature identifying the fact\"},\"returns\":{\"exists\":\"whether or not a fact with the given signature         is associated with the queried account\",\"version\":\"the prover version id that proved this fact\"}},\"verifyFactVersionNoFee(address,bytes32)\":{\"details\":\"This function is for use by anyoneThis function reverts if the fact requires a fee to query\",\"params\":{\"account\":\"The address to which the fact belongs\",\"factSig\":\"The unique signature identifying the fact\"},\"returns\":{\"exists\":\"whether or not a fact with the given signature         is associated with the queried account\",\"version\":\"the prover version id that proved this fact\"}},\"withdrawFees(address,address)\":{\"params\":{\"dest\":\"The address to which fees should be transferred\",\"token\":\"The ERC20 token from which to extract fees. Or the 0 address for        native ETH\"}}},\"title\":\"Holder of Relics and Artifacts\",\"version\":1},\"userdoc\":{\"events\":{\"NewProver(address,uint64)\":{\"notice\":\"Issued when a new prover is accepted into the Reliquary\"},\"PendingProverAdded(address,uint64,uint64)\":{\"notice\":\"Issued when a new prover is placed under consideration for acceptance         into the Reliquary\"},\"ProverRevoked(address,uint64)\":{\"notice\":\"Issued when an existing prover is banished from the Reliquary\"}},\"kind\":\"user\",\"methods\":{\"activateProver(address)\":{\"notice\":\"activates a pending prover once the delay has passed. Callable by anyone.\"},\"addCredits(address,uint192)\":{\"notice\":\"Add credits to an account. Requires the CREDITS_ROLE.\"},\"addProver(address,uint64)\":{\"notice\":\"Add/propose a new prover to prove facts. Requires the ADD_PROVER_ROLE.\"},\"addSubscriber(address,uint64)\":{\"notice\":\"Add/update a subscription. Requires the SUBSCRIPTION_ROLE.\"},\"assertValidBlockHash(address,bytes32,uint256,bytes)\":{\"notice\":\"Asserts that a particular block had a particular hash\"},\"assertValidBlockHashFromProver(address,bytes32,uint256,bytes)\":{\"notice\":\"Asserts that a particular block had a particular hash. Callable only from provers.\"},\"checkProveFactFee(address)\":{\"notice\":\"Require that an appropriate fee is paid for proving a fact\"},\"checkProver((uint64,(uint8,uint16,uint8,uint8,uint32),bool))\":{\"notice\":\"Helper function to query the status of a prover\"},\"credits(address)\":{\"notice\":\"Check how many credits a given account possesses\"},\"debugValidBlockHash(address,bytes32,uint256,bytes)\":{\"notice\":\"Verify if a particular block had a particular hash. Only callable by address(0), for debug\"},\"debugVerifyFact(address,bytes32)\":{\"notice\":\"Query for associated information for a fact. Only callable by address(0), for debug\"},\"getFact(address,bytes32)\":{\"notice\":\"Query for associated information for a fact. Only callable from provers.\"},\"getProveFactNativeFee(address)\":{\"notice\":\"Determine the appropriate ETH fee to prove a fact\"},\"getProveFactTokenFee(address)\":{\"notice\":\"Determine the appropriate token fee to prove a fact\"},\"getVerifyFactNativeFee(bytes32)\":{\"notice\":\"Determine the appropriate ETH fee to query a fact\"},\"getVerifyFactTokenFee(bytes32)\":{\"notice\":\"Determine the appropriate token fee to query a fact\"},\"isSubscriber(address)\":{\"notice\":\"Check if an account has an active subscription\"},\"removeCredits(address,uint192)\":{\"notice\":\"Remove credits from an account. Requires the CREDITS_ROLE.\"},\"removeSubscriber(address)\":{\"notice\":\"Remove a subscription. Requires the SUBSCRIPTION_ROLE.\"},\"resetFact(address,bytes32)\":{\"notice\":\"Deletes the fact from the Reliquary. Only callable from provers.\"},\"revokeProver(address)\":{\"notice\":\"Stop accepting proofs from this prover. Requires the GOVERNANCE_ROLE.\"},\"setFact(address,bytes32,bytes)\":{\"notice\":\"Adds the given information to the Reliquary. Only callable from provers.\"},\"setFactFee(uint8,(uint8,uint16,uint8,uint8,uint32),address)\":{\"notice\":\"Sets the FeeInfo for a particular fee class. Requires the GOVERNANCE_ROLE.\"},\"setInitialized()\":{\"notice\":\"Initialize the Reliquary, enforcing the time lock for new provers. Requires the ADD_PROVER_ROLE.\"},\"setProverFee(address,(uint8,uint16,uint8,uint8,uint32),address)\":{\"notice\":\"Sets the FeeInfo for a particular prover. Requires the GOVERNANCE_ROLE.\"},\"setValidBlockFee((uint8,uint16,uint8,uint8,uint32),address)\":{\"notice\":\"Sets the FeeInfo for block verification. Requires the GOVERNANCE_ROLE.\"},\"validBlockHash(address,bytes32,uint256,bytes)\":{\"notice\":\"Verify if a particular block had a particular hash\"},\"validBlockHashFromProver(address,bytes32,uint256,bytes)\":{\"notice\":\"Verify if a particular block had a particular hash. Only callable from provers.\"},\"verifyBlockFeeInfo()\":{\"notice\":\"FeeInfo struct for block hash queries\"},\"verifyFact(address,bytes32)\":{\"notice\":\"Query for associated information for a fact\"},\"verifyFactNoFee(address,bytes32)\":{\"notice\":\"Query for associated information for a fact which requires no query fee.\"},\"verifyFactVersion(address,bytes32)\":{\"notice\":\"Query for the prover version for a fact\"},\"verifyFactVersionNoFee(address,bytes32)\":{\"notice\":\"Query for the prover version for a fact which requires no query fee.\"},\"versions(uint64)\":{\"notice\":\"Reverse mapping of version information to the unique prover able         to issue statements with that version\"},\"withdrawFees(address,address)\":{\"notice\":\"Extract accumulated fees. Requires the GOVERNANCE_ROLE.\"}},\"notice\":\"The Reliquary is the heart of Relic. All issuers of Relics and Artifacts         must be added to the Reliquary. Queries about Relics and Artifacts should         be made to the Reliquary.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/relic-sdk/packages/contracts/interfaces/IReliquary.sol\":\"IReliquary\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":relic-sdk/=lib/relic-sdk/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"lib/relic-sdk/packages/contracts/interfaces/IReliquary.sol\":{\"keccak256\":\"0x00a019664da642f8997dd91e91d2ca86b73b30537316711a7497824afc444220\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a6fe8ba45d22d1f51d1cb2a44ef02d91ec6a27da9b983c3bb8cb172ebccf1eb\",\"dweb:/ipfs/QmeVxjn5YJVZGePkuXFgCdDjmp7b7LmjFS6xxT4xtzjq2v\"]},\"lib/relic-sdk/packages/contracts/lib/Facts.sol\":{\"keccak256\":\"0x1a1b1baeabcf4cb125407cdcc21ab65e44f27cab9d69efaa144b47c027b775a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9f5174c39aaa043346d5350840c6bcb7e6ec1bb6f6ef41eca354b5f0b40fed5\",\"dweb:/ipfs/QmZA71gBL91KAgXD6YH5sMvrzoDUY84BfCUREVK3d2JB5Q\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"AccessControlBadConfirmation"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"type":"error","name":"AccessControlUnauthorizedAccount"},{"inputs":[{"internalType":"address","name":"prover","type":"address","indexed":false},{"internalType":"uint64","name":"version","type":"uint64","indexed":false}],"type":"event","name":"NewProver","anonymous":false},{"inputs":[{"internalType":"address","name":"prover","type":"address","indexed":false},{"internalType":"uint64","name":"version","type":"uint64","indexed":false},{"internalType":"uint64","name":"timestamp","type":"uint64","indexed":false}],"type":"event","name":"PendingProverAdded","anonymous":false},{"inputs":[{"internalType":"address","name":"prover","type":"address","indexed":false},{"internalType":"uint64","name":"version","type":"uint64","indexed":false}],"type":"event","name":"ProverRevoked","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32","indexed":true},{"internalType":"bytes32","name":"previousAdminRole","type":"bytes32","indexed":true},{"internalType":"bytes32","name":"newAdminRole","type":"bytes32","indexed":true}],"type":"event","name":"RoleAdminChanged","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32","indexed":true},{"internalType":"address","name":"account","type":"address","indexed":true},{"internalType":"address","name":"sender","type":"address","indexed":true}],"type":"event","name":"RoleGranted","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32","indexed":true},{"internalType":"address","name":"account","type":"address","indexed":true},{"internalType":"address","name":"sender","type":"address","indexed":true}],"type":"event","name":"RoleRevoked","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"ADD_PROVER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"CREDITS_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"DELAY","outputs":[{"internalType":"uint64","name":"","type":"uint64"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"GOVERNANCE_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"SUBSCRIPTION_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"prover","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"activateProver"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint192","name":"amount","type":"uint192"}],"stateMutability":"nonpayable","type":"function","name":"addCredits"},{"inputs":[{"internalType":"address","name":"prover","type":"address"},{"internalType":"uint64","name":"version","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"addProver"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint64","name":"ts","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"addSubscriber"},{"inputs":[{"internalType":"address","name":"verifier","type":"address"},{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"uint256","name":"num","type":"uint256"},{"internalType":"bytes","name":"proof","type":"bytes"}],"stateMutability":"payable","type":"function","name":"assertValidBlockHash"},{"inputs":[{"internalType":"address","name":"verifier","type":"address"},{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"uint256","name":"num","type":"uint256"},{"internalType":"bytes","name":"proof","type":"bytes"}],"stateMutability":"view","type":"function","name":"assertValidBlockHashFromProver"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"stateMutability":"payable","type":"function","name":"checkProveFactFee"},{"inputs":[{"internalType":"struct IReliquary.ProverInfo","name":"prover","type":"tuple","components":[{"internalType":"uint64","name":"version","type":"uint64"},{"internalType":"struct IReliquary.FeeInfo","name":"feeInfo","type":"tuple","components":[{"internalType":"uint8","name":"flags","type":"uint8"},{"internalType":"uint16","name":"feeCredits","type":"uint16"},{"internalType":"uint8","name":"feeWeiMantissa","type":"uint8"},{"internalType":"uint8","name":"feeWeiExponent","type":"uint8"},{"internalType":"uint32","name":"feeExternalId","type":"uint32"}]},{"internalType":"bool","name":"revoked","type":"bool"}]}],"stateMutability":"pure","type":"function","name":"checkProver"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"stateMutability":"view","type":"function","name":"credits","outputs":[{"internalType":"uint192","name":"","type":"uint192"}]},{"inputs":[{"internalType":"address","name":"verifier","type":"address"},{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"uint256","name":"num","type":"uint256"},{"internalType":"bytes","name":"proof","type":"bytes"}],"stateMutability":"view","type":"function","name":"debugValidBlockHash","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"FactSignature","name":"factSig","type":"bytes32"}],"stateMutability":"view","type":"function","name":"debugVerifyFact","outputs":[{"internalType":"bool","name":"exists","type":"bool"},{"internalType":"uint64","name":"version","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function","name":"factFees","outputs":[{"internalType":"struct IReliquary.FeeInfo","name":"","type":"tuple","components":[{"internalType":"uint8","name":"flags","type":"uint8"},{"internalType":"uint16","name":"feeCredits","type":"uint16"},{"internalType":"uint8","name":"feeWeiMantissa","type":"uint8"},{"internalType":"uint8","name":"feeWeiExponent","type":"uint8"},{"internalType":"uint32","name":"feeExternalId","type":"uint32"}]}]},{"inputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"feeAccounts","outputs":[{"internalType":"uint64","name":"subscriberUntilTime","type":"uint64"},{"internalType":"uint192","name":"credits","type":"uint192"}]},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","name":"feeExternals","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"FactSignature","name":"factSig","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getFact","outputs":[{"internalType":"bool","name":"exists","type":"bool"},{"internalType":"uint64","name":"version","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"address","name":"prover","type":"address"}],"stateMutability":"view","type":"function","name":"getProveFactNativeFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"prover","type":"address"}],"stateMutability":"view","type":"function","name":"getProveFactTokenFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"FactSignature","name":"factSig","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getVerifyFactNativeFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"FactSignature","name":"factSig","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getVerifyFactTokenFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"grantRole"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"initialized","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"stateMutability":"view","type":"function","name":"isSubscriber","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"pendingProvers","outputs":[{"internalType":"uint64","name":"timestamp","type":"uint64"},{"internalType":"uint64","name":"version","type":"uint64"}]},{"inputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"provers","outputs":[{"internalType":"struct IReliquary.ProverInfo","name":"","type":"tuple","components":[{"internalType":"uint64","name":"version","type":"uint64"},{"internalType":"struct IReliquary.FeeInfo","name":"feeInfo","type":"tuple","components":[{"internalType":"uint8","name":"flags","type":"uint8"},{"internalType":"uint16","name":"feeCredits","type":"uint16"},{"internalType":"uint8","name":"feeWeiMantissa","type":"uint8"},{"internalType":"uint8","name":"feeWeiExponent","type":"uint8"},{"internalType":"uint32","name":"feeExternalId","type":"uint32"}]},{"internalType":"bool","name":"revoked","type":"bool"}]}]},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint192","name":"amount","type":"uint192"}],"stateMutability":"nonpayable","type":"function","name":"removeCredits"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"removeSubscriber"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"renounceRole"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"FactSignature","name":"factSig","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"resetFact"},{"inputs":[{"internalType":"address","name":"prover","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"revokeProver"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"revokeRole"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint192","name":"amount","type":"uint192"}],"stateMutability":"nonpayable","type":"function","name":"setCredits"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"FactSignature","name":"factSig","type":"bytes32"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"setFact"},{"inputs":[{"internalType":"uint8","name":"cls","type":"uint8"},{"internalType":"struct IReliquary.FeeInfo","name":"feeInfo","type":"tuple","components":[{"internalType":"uint8","name":"flags","type":"uint8"},{"internalType":"uint16","name":"feeCredits","type":"uint16"},{"internalType":"uint8","name":"feeWeiMantissa","type":"uint8"},{"internalType":"uint8","name":"feeWeiExponent","type":"uint8"},{"internalType":"uint32","name":"feeExternalId","type":"uint32"}]},{"internalType":"address","name":"feeExternal","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setFactFee"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"setInitialized"},{"inputs":[{"internalType":"address","name":"prover","type":"address"},{"internalType":"struct IReliquary.FeeInfo","name":"feeInfo","type":"tuple","components":[{"internalType":"uint8","name":"flags","type":"uint8"},{"internalType":"uint16","name":"feeCredits","type":"uint16"},{"internalType":"uint8","name":"feeWeiMantissa","type":"uint8"},{"internalType":"uint8","name":"feeWeiExponent","type":"uint8"},{"internalType":"uint32","name":"feeExternalId","type":"uint32"}]},{"internalType":"address","name":"feeExternal","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setProverFee"},{"inputs":[{"internalType":"struct IReliquary.FeeInfo","name":"feeInfo","type":"tuple","components":[{"internalType":"uint8","name":"flags","type":"uint8"},{"internalType":"uint16","name":"feeCredits","type":"uint16"},{"internalType":"uint8","name":"feeWeiMantissa","type":"uint8"},{"internalType":"uint8","name":"feeWeiExponent","type":"uint8"},{"internalType":"uint32","name":"feeExternalId","type":"uint32"}]},{"internalType":"address","name":"feeExternal","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setValidBlockFee"},{"inputs":[{"internalType":"address","name":"verifier","type":"address"},{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"uint256","name":"num","type":"uint256"},{"internalType":"bytes","name":"proof","type":"bytes"}],"stateMutability":"payable","type":"function","name":"validBlockHash","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"verifier","type":"address"},{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"uint256","name":"num","type":"uint256"},{"internalType":"bytes","name":"proof","type":"bytes"}],"stateMutability":"view","type":"function","name":"validBlockHashFromProver","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"verifyBlockFeeInfo","outputs":[{"internalType":"struct IReliquary.FeeInfo","name":"","type":"tuple","components":[{"internalType":"uint8","name":"flags","type":"uint8"},{"internalType":"uint16","name":"feeCredits","type":"uint16"},{"internalType":"uint8","name":"feeWeiMantissa","type":"uint8"},{"internalType":"uint8","name":"feeWeiExponent","type":"uint8"},{"internalType":"uint32","name":"feeExternalId","type":"uint32"}]}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"FactSignature","name":"factSig","type":"bytes32"}],"stateMutability":"payable","type":"function","name":"verifyFact","outputs":[{"internalType":"bool","name":"exists","type":"bool"},{"internalType":"uint64","name":"version","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"FactSignature","name":"factSig","type":"bytes32"}],"stateMutability":"view","type":"function","name":"verifyFactNoFee","outputs":[{"internalType":"bool","name":"exists","type":"bool"},{"internalType":"uint64","name":"version","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"FactSignature","name":"factSig","type":"bytes32"}],"stateMutability":"payable","type":"function","name":"verifyFactVersion","outputs":[{"internalType":"bool","name":"exists","type":"bool"},{"internalType":"uint64","name":"version","type":"uint64"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"FactSignature","name":"factSig","type":"bytes32"}],"stateMutability":"view","type":"function","name":"verifyFactVersionNoFee","outputs":[{"internalType":"bool","name":"exists","type":"bool"},{"internalType":"uint64","name":"version","type":"uint64"}]},{"inputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function","name":"versions","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"dest","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"withdrawFees"}],"devdoc":{"kind":"dev","methods":{"activateProver(address)":{"params":{"prover":"the address of the pending prover"}},"addCredits(address,uint192)":{"params":{"amount":"The number of credits to be added","user":"The account to which more credits should be granted"}},"addProver(address,uint64)":{"details":"Provers and proposed provers must have unique version IDsAfter the Reliquary is initialized, a review period of 64k blocks      must conclude before a prover may be added. The request must then      be re-submitted to take effect. Before initialization is complete,      the review period is skipped.Emits PendingProverAdded when a prover is proposed for inclusion","params":{"prover":"the address of the prover in question","version":"the unique version string to associate with this prover"}},"addSubscriber(address,uint64)":{"params":{"ts":"The new block timestamp at which the subscription expires","user":"The subscriber account to modify"}},"assertValidBlockHash(address,bytes32,uint256,bytes)":{"details":"Reverts if the given block was not proven to have the given hash.A fee may be required based on the block in question","params":{"hash":"The block hash in question","num":"The block number to query","proof":"Any witness information needed by the verifier","verifier":"The block history verifier to use for the query"}},"assertValidBlockHashFromProver(address,bytes32,uint256,bytes)":{"details":"Reverts if the given block was not proven to have the given hash.This function is only for use by provers (reverts otherwise)","params":{"hash":"The block hash in question","num":"The block number to query","proof":"Any witness information needed by the verifier","verifier":"The block history verifier to use for the query"}},"checkProveFactFee(address)":{"details":"The fee is derived from the prover which calls this  functionReverts if the fee is not sufficientOnly to be called by a prover","params":{"sender":"The account wanting to prove a fact"}},"checkProver((uint64,(uint8,uint16,uint8,uint8,uint32),bool))":{"details":"reverts if the prover is invalid or revoked","params":{"prover":"the ProverInfo associated with the prover in question"}},"credits(address)":{"params":{"user":"The account in question"},"returns":{"_0":"The number of credits"}},"debugValidBlockHash(address,bytes32,uint256,bytes)":{"details":"This function is for use by off-chain tools only (reverts otherwise)","params":{"hash":"The block hash in question","num":"The block number to query","proof":"Any witness information needed by the verifier","verifier":"The block history verifier to use for the query"},"returns":{"_0":"boolean indication of whether or not the given block was         proven to have the given hash."}},"debugVerifyFact(address,bytes32)":{"details":"This function is for use by off-chain tools only (reverts otherwise)","params":{"account":"The address to which the fact belongs","factSig":"The unique signature identifying the fact"},"returns":{"data":"any associated fact data","exists":"whether or not a fact with the given signature         is associated with the queried account","version":"the prover version id that proved this fact"}},"getFact(address,bytes32)":{"details":"This function is only for use by provers (reverts otherwise)","params":{"account":"The address to which the fact belongs","factSig":"The unique signature identifying the fact"},"returns":{"data":"any associated fact data","exists":"whether or not a fact with the given signature         is associated with the queried account","version":"the prover version id that proved this fact"}},"getProveFactNativeFee(address)":{"details":"Reverts if the fee is not to be paid in ETH","params":{"prover":"The prover of the desired fact"},"returns":{"_0":"the fee in wei"}},"getProveFactTokenFee(address)":{"details":"Reverts if the fee is not to be paid in external tokens","params":{"prover":"The prover of the desired fact"},"returns":{"_0":"the fee in wei"}},"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."},"getVerifyFactNativeFee(bytes32)":{"details":"Reverts if the fee is not to be paid in ETH","params":{"factSig":"The signature of the desired fact"},"returns":{"_0":"the fee in wei"}},"getVerifyFactTokenFee(bytes32)":{"details":"Reverts if the fee is not to be paid in external tokens","params":{"factSig":"The signature of the desired fact"},"returns":{"_0":"the fee in wei"}},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"isSubscriber(address)":{"params":{"user":"The account in question"},"returns":{"_0":"True if the account is active, otherwise false"}},"removeCredits(address,uint192)":{"params":{"amount":"The number of credits to be removed","user":"The account from which credits should be removed"}},"removeSubscriber(address)":{"params":{"user":"The subscriber account to modify"}},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."},"resetFact(address,bytes32)":{"details":"May only be called by non-revoked provers","params":{"account":"The account to which this information is bound (may be        the null account for information bound to no specific address)","factSig":"The unique signature of the particular fact being deleted"}},"revokeProver(address)":{"details":"Emits ProverRevokedNote: existing facts proved by the prover may still stand","params":{"prover":"The prover to banish from the reliquary"}},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"setFact(address,bytes32,bytes)":{"details":"May only be called by non-revoked provers","params":{"account":"The account to which this information is bound (may be        the null account for information bound to no specific address)","data":"Associated data to store with this item","factSig":"The unique signature of the particular fact being proven"}},"setFactFee(uint8,(uint8,uint16,uint8,uint8,uint32),address)":{"params":{"cls":"The fee class","feeExternal":"An external fee provider (token or delegate). If        none is required, this should be set to 0.","feeInfo":"The FeeInfo to use for the class"}},"setProverFee(address,(uint8,uint16,uint8,uint8,uint32),address)":{"params":{"feeExternal":"An external fee provider (token or delegate). If        none is required, this should be set to 0.","feeInfo":"The FeeInfo to use for the class","prover":"The prover in question"}},"setValidBlockFee((uint8,uint16,uint8,uint8,uint32),address)":{"params":{"feeExternal":"An external fee provider (token or delegate). If        none is required, this should be set to 0.","feeInfo":"The FeeInfo to use for the class"}},"validBlockHash(address,bytes32,uint256,bytes)":{"details":"A fee may be required based on the block in question","params":{"hash":"The block hash in question","num":"The block number to query","proof":"Any witness information needed by the verifier","verifier":"The block history verifier to use for the query"},"returns":{"_0":"boolean indication of whether or not the given block was         proven to have the given hash."}},"validBlockHashFromProver(address,bytes32,uint256,bytes)":{"details":"This function is only for use by provers (reverts otherwise)","params":{"hash":"The block hash in question","num":"The block number to query","proof":"Any witness information needed by the verifier","verifier":"The block history verifier to use for the query"},"returns":{"_0":"boolean indication of whether or not the given block was         proven to have the given hash."}},"verifyFact(address,bytes32)":{"details":"A fee may be required based on the factSig","params":{"account":"The address to which the fact belongs","factSig":"The unique signature identifying the fact"},"returns":{"data":"any associated fact data","exists":"whether or not a fact with the given signature         is associated with the queried account","version":"the prover version id that proved this fact"}},"verifyFactNoFee(address,bytes32)":{"details":"This function is for use by anyoneThis function reverts if the fact requires a fee to query","params":{"account":"The address to which the fact belongs","factSig":"The unique signature identifying the fact"},"returns":{"data":"any associated fact data","exists":"whether or not a fact with the given signature         is associated with the queried account","version":"the prover version id that proved this fact"}},"verifyFactVersion(address,bytes32)":{"details":"A fee may be required based on the factSig","params":{"account":"The address to which the fact belongs","factSig":"The unique signature identifying the fact"},"returns":{"exists":"whether or not a fact with the given signature         is associated with the queried account","version":"the prover version id that proved this fact"}},"verifyFactVersionNoFee(address,bytes32)":{"details":"This function is for use by anyoneThis function reverts if the fact requires a fee to query","params":{"account":"The address to which the fact belongs","factSig":"The unique signature identifying the fact"},"returns":{"exists":"whether or not a fact with the given signature         is associated with the queried account","version":"the prover version id that proved this fact"}},"withdrawFees(address,address)":{"params":{"dest":"The address to which fees should be transferred","token":"The ERC20 token from which to extract fees. Or the 0 address for        native ETH"}}},"version":1},"userdoc":{"kind":"user","methods":{"activateProver(address)":{"notice":"activates a pending prover once the delay has passed. Callable by anyone."},"addCredits(address,uint192)":{"notice":"Add credits to an account. Requires the CREDITS_ROLE."},"addProver(address,uint64)":{"notice":"Add/propose a new prover to prove facts. Requires the ADD_PROVER_ROLE."},"addSubscriber(address,uint64)":{"notice":"Add/update a subscription. Requires the SUBSCRIPTION_ROLE."},"assertValidBlockHash(address,bytes32,uint256,bytes)":{"notice":"Asserts that a particular block had a particular hash"},"assertValidBlockHashFromProver(address,bytes32,uint256,bytes)":{"notice":"Asserts that a particular block had a particular hash. Callable only from provers."},"checkProveFactFee(address)":{"notice":"Require that an appropriate fee is paid for proving a fact"},"checkProver((uint64,(uint8,uint16,uint8,uint8,uint32),bool))":{"notice":"Helper function to query the status of a prover"},"credits(address)":{"notice":"Check how many credits a given account possesses"},"debugValidBlockHash(address,bytes32,uint256,bytes)":{"notice":"Verify if a particular block had a particular hash. Only callable by address(0), for debug"},"debugVerifyFact(address,bytes32)":{"notice":"Query for associated information for a fact. Only callable by address(0), for debug"},"getFact(address,bytes32)":{"notice":"Query for associated information for a fact. Only callable from provers."},"getProveFactNativeFee(address)":{"notice":"Determine the appropriate ETH fee to prove a fact"},"getProveFactTokenFee(address)":{"notice":"Determine the appropriate token fee to prove a fact"},"getVerifyFactNativeFee(bytes32)":{"notice":"Determine the appropriate ETH fee to query a fact"},"getVerifyFactTokenFee(bytes32)":{"notice":"Determine the appropriate token fee to query a fact"},"isSubscriber(address)":{"notice":"Check if an account has an active subscription"},"removeCredits(address,uint192)":{"notice":"Remove credits from an account. Requires the CREDITS_ROLE."},"removeSubscriber(address)":{"notice":"Remove a subscription. Requires the SUBSCRIPTION_ROLE."},"resetFact(address,bytes32)":{"notice":"Deletes the fact from the Reliquary. Only callable from provers."},"revokeProver(address)":{"notice":"Stop accepting proofs from this prover. Requires the GOVERNANCE_ROLE."},"setFact(address,bytes32,bytes)":{"notice":"Adds the given information to the Reliquary. Only callable from provers."},"setFactFee(uint8,(uint8,uint16,uint8,uint8,uint32),address)":{"notice":"Sets the FeeInfo for a particular fee class. Requires the GOVERNANCE_ROLE."},"setInitialized()":{"notice":"Initialize the Reliquary, enforcing the time lock for new provers. Requires the ADD_PROVER_ROLE."},"setProverFee(address,(uint8,uint16,uint8,uint8,uint32),address)":{"notice":"Sets the FeeInfo for a particular prover. Requires the GOVERNANCE_ROLE."},"setValidBlockFee((uint8,uint16,uint8,uint8,uint32),address)":{"notice":"Sets the FeeInfo for block verification. Requires the GOVERNANCE_ROLE."},"validBlockHash(address,bytes32,uint256,bytes)":{"notice":"Verify if a particular block had a particular hash"},"validBlockHashFromProver(address,bytes32,uint256,bytes)":{"notice":"Verify if a particular block had a particular hash. Only callable from provers."},"verifyBlockFeeInfo()":{"notice":"FeeInfo struct for block hash queries"},"verifyFact(address,bytes32)":{"notice":"Query for associated information for a fact"},"verifyFactNoFee(address,bytes32)":{"notice":"Query for associated information for a fact which requires no query fee."},"verifyFactVersion(address,bytes32)":{"notice":"Query for the prover version for a fact"},"verifyFactVersionNoFee(address,bytes32)":{"notice":"Query for the prover version for a fact which requires no query fee."},"versions(uint64)":{"notice":"Reverse mapping of version information to the unique prover able         to issue statements with that version"},"withdrawFees(address,address)":{"notice":"Extract accumulated fees. Requires the GOVERNANCE_ROLE."}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","relic-sdk/=lib/relic-sdk/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/relic-sdk/packages/contracts/interfaces/IReliquary.sol":"IReliquary"},"evmVersion":"paris","libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol":{"keccak256":"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41","urls":["bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26","dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH"],"license":"MIT"},"lib/relic-sdk/packages/contracts/interfaces/IReliquary.sol":{"keccak256":"0x00a019664da642f8997dd91e91d2ca86b73b30537316711a7497824afc444220","urls":["bzz-raw://3a6fe8ba45d22d1f51d1cb2a44ef02d91ec6a27da9b983c3bb8cb172ebccf1eb","dweb:/ipfs/QmeVxjn5YJVZGePkuXFgCdDjmp7b7LmjFS6xxT4xtzjq2v"],"license":"MIT"},"lib/relic-sdk/packages/contracts/lib/Facts.sol":{"keccak256":"0x1a1b1baeabcf4cb125407cdcc21ab65e44f27cab9d69efaa144b47c027b775a1","urls":["bzz-raw://d9f5174c39aaa043346d5350840c6bcb7e6ec1bb6f6ef41eca354b5f0b40fed5","dweb:/ipfs/QmZA71gBL91KAgXD6YH5sMvrzoDUY84BfCUREVK3d2JB5Q"],"license":"MIT"}},"version":1},"id":27}